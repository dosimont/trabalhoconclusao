SDDFA
/*
 * "Dimemas Configuration Format:" "Version 2.5"
 * "Last update"  "09/18/02 at 12:51"
 */ ;;


#0:
"wide area network information" {
   // "wan_name" "name of the wide area network simulated"
   char "wan_name"[];
   // "number_of_machines" "number of machines in wan"
   int "number_of_machines";
   // "number_dedicated_connections" "number of dedicated connections between machines in the simulated system"
   int "number_dedicated_connections";
   //"function_of_traffic" "function that models influence of traffic in the non dedicated network"
        // "options: 1 EXP, 2 LOG, 3 LIN, 4 CT"
   int "function_of_traffic";
   // Maximal value of traffic in the network
   double "max_traffic_value";
   // "external_net_bandwidth" "external net bandwidth in MB/s"
   double "external_net_bandwidth";
   // "1 Constant, 2 Lineal, 3 Logarithmic"
   int "communication_group_model";
};;



#1:
"environment information" {
   char "machine_name"[];
   int "machine_id";
   // "instrumented_architecture" "Architecture used to instrument"
   char    "instrumented_architecture"[];
   // "number_of_nodes" "Number of nodes on virtual machine"
   int     "number_of_nodes";
   // "network_bandwidth" "Data tranfer rate between nodes in Mbytes/s"
   // "0 means instantaneous communication"
   double  "network_bandwidth";
   // "number_of_buses_on_network" "Maximun number of messages on network"
   // "0 means no limit"
   // "1 means bus contention"
   int   "number_of_buses_on_network";
   // "1 Constant, 2 Lineal, 3 Logarithmic"
   int   "communication_group_model";
};;


#2:
"node information" {
   int "machine_id";
   // "node_id" "Node number"
   int     "node_id";
   // "simulated_architecture" "Architecture node name"
   char    "simulated_architecture"[];
   // "number_of_processors" "Number of processors within node"
   int     "number_of_processors";
	// "speed_ratio_instrumented_vs_simulated" "Relative processor speed"
	double  "speed_ratio_instrumented_vs_simulated";
	// "intra_node_startup" "Startup time (s) of intra-node communications model"
	double  "intra_node_startup";
	// "intra_node_bandwidth" "Bandwidth (MB/s) of intra-node communications model"
	// "0 means instantaneous communication"
	double  "intra_node_bandwidth";
	// "intra_node_buses" "Number of buses of intra-node communications model"
	// "0 means infinite buses"
	int     "intra_node_buses";
	// "intra_node_input_links" "Input links of intra-node communications model"
	int     "intra_node_input_links";
	// "intra_node_input_links" "Output links of intra-node communications model"
	int     "intra_node_output_links";
	// "intra_node_startup" "Startup time (s) of inter-node communications model"
	double  "inter_node_startup";
	// "inter_node_input_links" "Input links of inter-node communications model"
	int     "inter_node_input_links";
	// "inter_node_output_links" "Input links of intra-node communications model"
	int     "inter_node_output_links";
	// "wan_startup" "Startup time (s) of inter-machines (WAN) communications model"
	double  "wan_startup";
};;


#3:
"mapping information" {
   // "tracefile" "Tracefile name of application"
   char    "tracefile"[];
   // "number_of_tasks" "Number of tasks in application"
   int     "number_of_tasks";
   // "mapping_tasks_to_nodes" "List of nodes in application"
   int     "mapping_tasks_to_nodes"[];
};;


#4:
"configuration files" {
   char       "scheduler"[];
   char       "file_system"[];
   char       "communication"[];
   char       "sensitivity"[];
};;


#5:
"modules information" {
// Module type
        int     "type";
        // Module value
        int     "value";
        // Speed ratio for this module, 0 means instantaneous execution
        double  "execution_ratio";
};;


#6:
"file system parameters" {
   double     "disk latency";
   double     "disk bandwidth";
   double     "block size";
   int        "concurrent requests";
   double     "hit ratio";
};;


#7:
"dedicated connection information" {
   // "connection_id" "connection number"
   int "connection_id";
   // "source_machine" "source machine number"
   int "source_machine";
   // "destination_machine" "destination machine number"
   int "destination_machine";
   // "connection_bandwidth" "bandwidth of the connection in Mbytes/s"
   double "connection_bandwidth";
   // "tags_list" "list of tags that will use the connection"
   int "tags_list"[];
   // "first_message_size" "size of messages in bytes" int "first_message_size";
   int "first_message_size";
   // "first_size_condition" "size condition that should meet messages to use the connection"
        // "it can be <, =, > and its is referent to message_size
   char "first_size_condition"[];
   // "operation" "& AND, | OR"
   char "operation"[];
    // "second_message_size" "size of messages in bytes"
   int "second_message_size";
   // "second_size_condition" "size condition that should meet messages to use the connection"
        // "it can be <, =, > and its is referent to message_size"
   char "second_size_condition"[];
   // "list_communicators" "list of communicators of coll. Operations that can use the connection"
   int "list_communicators"[];
   // Latency of dedicated connection in seconds
   double "connection_startup";
   //Latency due to distance in seconds
        double "flight_time";
};;


"wide area network information" {"", 1, 0, 4, 0.0, 0.0, 1};;

"environment information" {"", 0, "", 1, 0.000000, 0, 1};;

"node information" { 0, 0, "", 8, 1000000.000000, 0.000000, 0.000000, 8, 1, 0, 0.000000, 1, 1, 0.000000 };;

"mapping information" {"sendrecv1.dim", 4, [4] {0,0,0,0}};;


"configuration files" {"", "", "", ""};;


"file system parameters" {0.0, 0.0, 8.0, 0, 1.0};;
